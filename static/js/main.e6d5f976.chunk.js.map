{"version":3,"sources":["components/BalanceCuenta/index.js","components/TiposOperaciones/DelData/index.js","components/TiposOperaciones/ModData/index.js","components/OperacionesUser/index.js","components/TiposOperaciones/AddData/index.js","components/Categories.js","components/Home/index.js","components/RegisterPage/index.js","components/LoginPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["BalanceCuenta","props","amount","DelData","delId","onHandleDelete","setReloading","setMessage","a","localStorage","getItem","token","axios","delete","headers","then","res","status","console","log","catch","e","onClick","ModData","modId","op","useState","visible","setVisible","concept","date","op_date","split","data","setData","onHandleChange","target","name","value","onHandleSubmit","preventDefault","trim","length","put","onSubmit","type","onChange","OperacionesUser","renderIn","setRenderIn","renderEx","setRenderEx","Render","filter","op_type","map","id_operations","renderIncome","renderExpense","useEffect","className","AddData","categories","category","modified_at","HandleFormSend","show","message","post","process","setTimeout","htmlFor","placeholder","cate","id","categorias_list","Home","authorization","setAuthorization","reloading","get","username","balance","RegisterPage","email","password","style","width","title","src","height","frameBorder","allowFullScreen","LoginPage","setLogin","setItem","App","login","authorize","setAuthorize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d5f976.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BalanceCuenta = props => {\r\n\r\n    const { amount } = props;\r\n    \r\n    return (\r\n        <div>El balance actual es de ${amount}</div>\r\n    )\r\n}\r\n\r\nBalanceCuenta.propTypes = {\r\n    amount: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default BalanceCuenta\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\n\r\nconst DelData = props => {\r\n\r\n    const { delId, setReloading, setMessage} = props\r\n\r\n    const onHandleDelete = async () => {  //Con esta función hacemos que el usuario pueda eliminar una operacion que quiera.\r\n        const token = await localStorage.getItem(\"Token\") //Se llama al token del usuario\r\n        axios.delete(`http://localhost:3500/api/operaciones/${delId}`,{\r\n            headers: {\r\n                \"authorization\": token\r\n            }\r\n        }) //Con solo pasarle el id y el token del usuaario ya podemos borrarlo \r\n            .then(res => {\r\n                if(res.status === 204) {\r\n                    console.log(res)\r\n                    // setTimeout(() => {\r\n                    //     setReloading(true)\r\n                    // }, 3000)\r\n                } else {\r\n                    console.log(res)\r\n                    console.log('No se pudo eliminar el elemento. Intenta de nuevo mas tarde')\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    }\r\n\r\n    return <button onClick={() => onHandleDelete()}> Borrar elemento </button>\r\n}\r\n\r\nDelData.propTypes = {\r\n    delId: PropTypes.number.isRequired,\r\n    setMessage: PropTypes.func.isRequired,\r\n    setReloading: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default DelData\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport axios from 'axios'\r\n\r\nconst ModData = props => {\r\n\r\n    const { token, modId, op, setMessage, setReloading} = props\r\n\r\n    // UseStates componente\r\n    const [ visible, setVisible ] = useState(false);\r\n\r\n    //UseStates Dato\r\n    const [ data, setData ] = useState({\r\n        concept: op.concept,\r\n        amount: op.amount,\r\n        date: op.op_date.split(\"T\")[0],\r\n    })\r\n\r\n    const onHandleChange = (e) => { //Funcion para poder tomar los datos que el usuario tipee\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const onHandleSubmit = async (e) => { //Realiza la peticion de modificacion a la base de datos\r\n        e.preventDefault()\r\n        if(data.concept === \"\" || data.date === \"0000-00-00\" || data.date === \"\") {\r\n            console.log('Completa los campos faltantes')\r\n        } else if(data.concept.trim().length <= 3){\r\n            console.log(\"Ingresa un concepto mas largo\")\r\n            setData({ \r\n                ...data,\r\n                concept: op.concept})\r\n        } else if(data.amount <= 0 ){\r\n            console.log('Ingresa un dato de monto que no sea negativo o igual a 0')\r\n            setData({\r\n                ...data,\r\n                amount: op.amount})\r\n        } else {\r\n            // Una vez que los datos del usuario cumplen con los verificadores se ejecuta la lamada a la base de datos\r\n            const token = await localStorage.getItem(\"Token\") //Se llama al token del usuario\r\n            axios.put(`http://localhost:3500/api/operaciones/${modId}`, data, {\r\n                headers: {\r\n                    \"authorization\": token\r\n                }\r\n            }).then(res => {\r\n                console.log(res)\r\n                // setMessage({\r\n                //     show: true,\r\n                //     message: res.data.message\r\n                // })\r\n                // setTimeout(() => {\r\n                //     setReloading(true)\r\n                // }, 3000)\r\n            })\r\n        }\r\n    }\r\n\r\n    const onClose = () => { // Funcion para mostrar y ocultar el formulario\r\n        setVisible(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => visible ? onClose() : setVisible(true)} >Modificar Elemento</button>\r\n            {visible\r\n            ? <form onSubmit={(e) => onHandleSubmit(e) }>\r\n                <input  \r\n                    type='text'\r\n                    name=\"concept\"\r\n                    value={data.concept}\r\n                    onChange={onHandleChange}\r\n                />\r\n                <input  \r\n                    type='number'\r\n                    name=\"amount\"\r\n                    value={data.amount}\r\n                    onChange={onHandleChange}\r\n                />\r\n                <input  \r\n                    type='date'\r\n                    name=\"date\"\r\n                    value={data.date}\r\n                    onChange={onHandleChange}\r\n                />\r\n                <input \r\n                    type=\"submit\"\r\n                />\r\n            </form>\r\n            : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nModData.propTypes = {\r\n    modId: PropTypes.number.isRequired,\r\n    op: PropTypes.object.isRequired,\r\n    setMessage: PropTypes.func.isRequired,\r\n    setReloading: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ModData","import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DelData from '../TiposOperaciones/DelData'\r\nimport ModData from '../TiposOperaciones/ModData'\r\nimport './index.css'\r\n\r\nconst OperacionesUser = props => {\r\n\r\nconst { data, setReloading, setMessage} = props;\r\n\r\n    \r\n    const [ renderIn, setRenderIn ] = useState([])\r\n    const [ renderEx, setRenderEx ] = useState([])\r\n\r\n    const Render = async (data) => {\r\n      const renderIncome = await data.filter(op => op.op_type === 'income').map(op => (\r\n        <li key={op.id_operations}><span>{op.concept}</span>${op.amount} <ModData modId={op.id_operations} op={op} setReloading={setReloading} setMessage={ setMessage }/> <DelData delId={ op.id_operations } setReloading={ setReloading } setMessage={ setMessage }/></li>\r\n      ))\r\n      const renderExpense = await data.filter(op => op.op_type === 'expense').map(op => (\r\n        <li key={op.id_operations}><span>{op.concept}</span>${op.amount} <ModData modId={op.id_operations} op={op} setReloading={setReloading} setMessage={ setMessage }/> <DelData delId={ op.id_operations } setReloading={ setReloading } setMessage={ setMessage }/></li>\r\n      ))\r\n      \r\n      if(renderIncome.length !== 0){\r\n        setRenderIn([renderIncome])\r\n      }\r\n\r\n      if(renderExpense.length !== 0){\r\n        setRenderEx([renderExpense])\r\n      }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n      Render(data)\r\n    }, [data]) // Render , setReloading\r\n\r\n    return (\r\n        <div className=\"main-table\">\r\n            <div className=\"op-table\">\r\n            <h2>Ingresos</h2>\r\n            <ul>\r\n              { renderIn.length === 0\r\n              ? <h2>No tienes operaciones en Ingresos. Puedes crear una abajo</h2>\r\n              : renderIn \r\n              }  \r\n            </ul>\r\n            </div>\r\n            <div  className=\"op-table\">\r\n            <h2>Egresos</h2>\r\n            <ul>\r\n              { renderEx.length !== 0\r\n              ? renderEx \r\n              : <h2>No tienes operaciones en Egresos. Puedes crear una abajo</h2>\r\n              }  \r\n            </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nOperacionesUser.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    setReloading: PropTypes.func.isRequired,\r\n    setMessage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default OperacionesUser\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './index.css'\r\nimport axios from 'axios';\r\n\r\nconst AddData = props => {\r\n    \r\n    const { setReloading, setMessage, categories} = props; // Este prop nos sirve para que en cada accion, con impacto en base de datos, que ejecute el usuario mande se pueda refrescar las tablas\r\n    \r\n    const [ visible, setVisible ] = useState(false);\r\n\r\n    // Form Values\r\n    const [ data, setData ] = useState({\r\n        concept: \"\",\r\n        amount: 0,\r\n        op_type: \"\",\r\n        op_date: \"\",\r\n        category: \"otros\", //default otros\r\n        modified_at: null, //Estatico solo cambia con la operacion de modify\r\n    })\r\n\r\n    const onHandleChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const HandleFormSend = async (e) => {\r\n        e.preventDefault()\r\n        // Concept validation\r\n        if(data.concept === \"\" || data.op_type === '' || data.op_date === \"0000-00-00\" || data.op_date === \"\") {\r\n            setMessage({\r\n                show: true,\r\n                message: 'Completa los campos faltantes'\r\n            })\r\n        } else if(data.concept.trim().length <= 3){\r\n            setMessage({\r\n                show: true,\r\n                message: \"Ingresa un concepto mas largo\"\r\n\r\n            })\r\n            setData({\r\n                ...data,\r\n                concept: \"\"\r\n            })\r\n        } else if(data.amount <= 0 ){\r\n            setMessage({\r\n                show: true,\r\n                message: 'Ingresa un dato de monto que no sea negativo o igual a 0'\r\n            })\r\n        } else { //Una vez se verifican los datos ingresados por el usuario y estos son correctos se ejecuta la llamada a la api y se impacta en la base de datos\r\n            const token = await localStorage.getItem(\"Token\") //Se llama al token del usuario\r\n            axios.post(process.env.REACT_APP_CREATE_ROUTE, data, {\r\n                headers: {\r\n                    \"authorization\": token,\r\n                }\r\n            }).then(res => {\r\n                    setMessage({\r\n                        show: true,\r\n                        message: res.data.message\r\n                    })\r\n                    console.log(res) \r\n                    setTimeout(() => {\r\n                        setReloading(true)\r\n                    }, 3000)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => visible ? setVisible(false) : setVisible(true)}>Crear operación</button>\r\n            {visible\r\n            ? <form className=\"add-form\" onSubmit={(e) =>  HandleFormSend(e) }>\r\n                <div>\r\n                    <label htmlFor=\"concept\">Concepto</label>\r\n                    <input\r\n                    value={data.concept}\r\n                    name=\"concept\"\r\n                    placeholder=\"Ingresa nombre de operacion\"\r\n                    onChange={onHandleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"amount\">Monto</label>\r\n                    <input \r\n                    value={data.amount}\r\n                    type=\"number\"\r\n                    name=\"amount\"\r\n                    placeholder=\"500, 700, 80000\"\r\n                    onChange={onHandleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"type\">Tipo de operación</label>\r\n                    <select \r\n                    value={data.op_type}\r\n                    name=\"op_type\"\r\n                    onChange={onHandleChange}\r\n                    >\r\n                        <option value=\"\">Elige tipo de operacion</option>\r\n                        <option value=\"income\">Ingreso</option>\r\n                        <option value=\"expense\">Egreso</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"category\">Categoría</label>\r\n                    <select \r\n                    value={data.category}\r\n                    name=\"category\"\r\n                    onChange={onHandleChange}\r\n                    >\r\n                        <option value=\"otros\">Otros</option>\r\n                        {\r\n                            categories.map((cate, id) => {\r\n                            return <option key={id} value={ cate }>{cate}</option>\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"date\">Fecha</label>\r\n                    <input \r\n                    value={data.op_date}\r\n                    type=\"date\"\r\n                    name=\"op_date\"\r\n                    onChange={onHandleChange}\r\n                    />\r\n                </div>\r\n                <input type=\"submit\" />\r\n            </form>\r\n            : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nAddData.propTypes = {\r\n    setReloading: PropTypes.func.isRequired,\r\n    setMessage: PropTypes.func.isRequired,\r\n    categories: PropTypes.array.isRequired\r\n}\r\n\r\nexport default AddData\r\n","// import React,{ useEffect, useState } from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\n// const Categories = props => {\r\n\r\n//     const { data, children } = props;\r\n\r\n//     const [ datos, setDatos ] = useState([{\r\n//         content: \"Cuota colegio junio\",\r\n//         amount: 500,\r\n//         type: \"Egreso\",\r\n//         creation_date: \"2021/05/12\",\r\n//         category: \"Hijos\",\r\n//         sub_category: { \r\n//             sub_category_1: \"educacion\",\r\n//         },\r\n//     },{\r\n//         content: \"Programacion\",\r\n//         amount: 50000,\r\n//         type: \"ingreso\",\r\n//         creation_date: \"2021/05/12\",\r\n//         category: \"Hijos\",\r\n//         sub_category: { \r\n//             sub_category_1: \"educacion\",\r\n//         },\r\n//     },{\r\n//         content: \"Cuota colegio junio\",\r\n//         amount: 500,\r\n//         type: \"Ingreso\",\r\n//         creation_date: \"2021/05/12\",\r\n//         category: \"Hijos\",\r\n//         sub_category: { \r\n//             sub_category_1: \"educacion\",\r\n//         },\r\n//     }])\r\n\r\n//     const [ Categoria, setCategoria ] = useState(\"\")\r\n//     const [ Mensaje, setMensaje ] = useState(\"\")\r\n\r\n//     // Categorias: Gaming, Suscripciones, Hogar, Tecnología, Trabajo, Salidas, Deportes\r\n//     // Educación, Delivery, Hobbies, Donaciones, Belleza, Auto, Hijos\r\n//     // Familia, Mascotas, Amigos, Transporte, Shopping, Bares, Entretenimiento, vestimenta\r\n//     // Viajes, Cuidado Personal, Servicios, Cajeros, Supermercados, Restaurant, Otros\r\n\r\n\r\n//     const SearchBar = async (dato) => {\r\n//         const newData = data.find(dato => dato.category === { Categoria })\r\n//     }\r\n\r\n//     const handlerChange = (e) => {\r\n//         e.preventDefault()\r\n//         console.log(e.target.value)\r\n//         setCategoria(e.target.value)\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         if(Categoria.trim().toLowerCase() === \"\") {\r\n//             setMensaje()\r\n//         } else if(Categoria.toLowerCase().trim() === \"juegos\") {\r\n//             setMensaje(SearchBar(data))\r\n//         } else {\r\n//             setMensaje(\"No se ha encontrado lo que buscas\")\r\n//         }\r\n//     }, [Categoria])\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <form>\r\n//                 <input \r\n//                 type=\"text\"\r\n//                 value={Categoria}\r\n//                 onChange={(e) => handlerChange(e)}\r\n//                 />\r\n//                 <h1>{ Mensaje }</h1>\r\n//             </form>            \r\n//             { data }\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// Categories.propTypes = {\r\n\r\n// }\r\n\r\nexport const categorias_list = [\"gaming\", \"suscripciones\", \"hogar\", \"Tecnologia\", \"Trabajo\",\r\n\"Salidas\", \"Deportes\", \"Educación\", \"Delivery\", \"hobbies\", \"donaciones\", \"belleza\", \"auto\", \"hijos\",\r\n\"familia\", \"mascotas\", \"amigos\", \"transporte\", \"shopping\", \"bares\", \"entretenimiento\", \"vestimenta\",\r\n\"viajes\", \"cuidado personal\", \"servicios\", \"cajeros\", \"supermercados\", \"restaurant\"]\r\n\r\n// export default Categories\r\n","import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\nimport axios from 'axios';\r\n\r\n//componentes\r\nimport BalanceCuenta from '../BalanceCuenta';\r\nimport OperacionesUser from '../OperacionesUser';\r\nimport AddData from '../TiposOperaciones/AddData'\r\nimport { categorias_list } from '../Categories';\r\n\r\n\r\nconst Home = props => {\r\n\r\n    const { authorization, setAuthorization, setMessage } = props\r\n\r\n    let [ data, setData ] = useState([]) //Operaciones del Usuario\r\n\r\n    const [ reloading, setReloading ] = useState(false) //Cuando se genere alguna accion\r\n\r\n    useEffect(() => { //Petición de datos si se encuentra autenticado el usuario y se actualiza si el usuario crea, borra y/o modifica\r\n\r\n        if(true){\r\n            axios.get(process.env.REACT_APP_USER_ROUTE, {\r\n                headers: {\r\n                    \"authorization\": authorization.token,\r\n                }\r\n            }).then(res => {\r\n                console.log(res)\r\n                setAuthorization({\r\n                    ...authorization,\r\n                    username: res.data.username,\r\n                    balance: res.data.balance\r\n                })\r\n            })\r\n            axios.get(process.env.REACT_APP_GET_OPS_ROUTE, {\r\n                headers: {\r\n                \"authorization\": authorization.token,\r\n            }}\r\n            ).then(res => {\r\n                if(res.data !== 0){\r\n                    setData(res.data.data)\r\n                    setReloading(false)    \r\n                } else {\r\n                    setMessage({\r\n                        show: true,\r\n                        message: \"Algo salio mal\"\r\n                    })\r\n                }\r\n            });\r\n        } else {\r\n            return\r\n        }\r\n    }, [reloading]) //isAuthenticated\r\n\r\n    return (\r\n        <div className=\"home-div\">\r\n            <div className=\"Home-container\">\r\n                <h1>Bienvenid@ { authorization.username }</h1>\r\n                <div>\r\n                    <BalanceCuenta amount={authorization.balance}/>\r\n                    <OperacionesUser setMessage={ setMessage } setReloading={setReloading} data={data}/>\r\n                    <AddData token={ authorization.token }categories={ categorias_list } setMessage={ setMessage } setReloading={setReloading}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Home;","import React,{ useState} from 'react'\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './index.css'\r\n\r\nconst RegisterPage = (props) => {\r\n\r\n    const { setMessage, setVisible } = props;\r\n\r\n    const [ data, setData ] = useState({\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { email, username, password } = data\r\n    \r\n    const onHandleChange = (e) => {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    \r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(email === \"\" || username === \"\" ||password === \"\"){\r\n            setMessage({\r\n                show: true,\r\n                message: \"Completa los campos requeridos\"\r\n            })\r\n        } else if(username.length <= 3) {\r\n            setMessage({\r\n                show: true,\r\n                message: \"El username tiene que tener al menos 3 caracteres\"\r\n            })\r\n        } else if( password.length < 6 ){\r\n            setMessage({\r\n                show: true,\r\n                message: \"La contraseña tiene que tener al menos 6 caracteres\"\r\n            })\r\n        } else {\r\n            axios.post(process.env.REACT_APP_REGISTER_ROUTE, {\r\n                headers: {\r\n                    \"Content_Type\": \"application/json\",\r\n                },\r\n                email,\r\n                username,\r\n                password\r\n            }).then(res => {\r\n                setMessage({\r\n                    show: true,\r\n                    message: res.data.message\r\n                })\r\n                setTimeout(() => {\r\n                    setVisible(visible => !visible) \r\n                }, 3000)\r\n            })\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"Login-Page-container\">\r\n            <h1>Bienvenido a Wallet App</h1>\r\n            <h2>Registrarse</h2>\r\n            <div style={{width:\"300px\"}} >\r\n            <div className=\"gif-Login\"><iframe title=\"pepe\" src=\"https://giphy.com/embed/3o6UB5RrlQuMfZp82Y\" width=\"100%\" height=\"100%\"  frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe></div>\r\n            </div>\r\n            <form onSubmit={onHandleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\" >Email</label>\r\n                    <input type=\"email\" name=\"email\"  value={ data.email } onChange={ onHandleChange } /> \r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"username\" >Username</label>\r\n                    <input type=\"text\" name=\"username\"  value={ data.username } onChange={ onHandleChange } /> \r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\" >Password</label>\r\n                    <input type=\"password\" name=\"password\" value={ data.password } onChange={ onHandleChange } /> \r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Registrarse\"/>\r\n\r\n            </form>\r\n            <button onClick={() => setVisible(visible => !visible)}>¿Ya tienes cuenta? ¡Logueate aquí!</button>\r\n            <p>Tienes que iniciar sesión para poder acceder a la aplicación</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nRegisterPage.propTypes = {\r\n    setVisible: PropTypes.func.isRequired,\r\n    setMessage: PropTypes.func.isRequired\r\n}\r\n\r\nexport default RegisterPage\r\n","import axios from 'axios'\r\nimport React,{ useState} from 'react'\r\nimport RegisterPage from '../RegisterPage';\r\nimport './index.css'\r\n\r\nconst LoginPage = (props) => {\r\n\r\n    const { setLogin, setMessage, setAuthorization } = props;\r\n\r\n    const [ data, setData ] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    //Para mostrar y ocultar el formulario de registro\r\n    const [ visible, setVisible ] = useState(false)\r\n\r\n    const { email, password } = data\r\n    \r\n    const onHandleChange = (e) => { // Para guardar los cambios que el usuario realice en los campos del formulario\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    \r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(email === \"\" || password === \"\"){\r\n            setMessage({\r\n                show: true,\r\n                message: \"Completa los campos requeridos\"\r\n            })\r\n        } else if( password.length < 6 ){\r\n            setMessage({\r\n                show: true,\r\n                message: \"La contraseña tiene que tener al menos 6 caracteres\"\r\n            })\r\n        } else {\r\n            axios.post(process.env.REACT_APP_LOGIN_ROUTE, {\r\n                email,\r\n                password\r\n            }).then(res => {\r\n                if(res.data.status === 200) {\r\n                    setMessage({\r\n                        show: true,\r\n                        message: res.data.message\r\n                    })\r\n                    // console.log(res.data)\r\n                    setAuthorization({\r\n                        username: \"\",\r\n                        balance: 0,\r\n                        token: res.data.token\r\n                    })\r\n                    setLogin(true)\r\n                    localStorage.setItem(\"Token\", res.data.token)\r\n                } else {\r\n                    setMessage({\r\n                        show: true,\r\n                        message: res.data.message\r\n                    })\r\n                }\r\n            })\r\n\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <>\r\n        { visible === true\r\n        ? <RegisterPage setMessage={ setMessage } setVisible={ setVisible }/>\r\n        : <div className=\"Login-Page-container\">\r\n            <h1>Bienvenido a Wallet App</h1>\r\n            <h2>Loguearse</h2>\r\n            <div style={{width:\"300px\"}} >\r\n            <div className=\"gif-Login\"><iframe title=\"pepe\" src=\"https://giphy.com/embed/3o6UB5RrlQuMfZp82Y\" width=\"100%\" height=\"100%\"  frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe></div>\r\n            </div>\r\n            <form onSubmit={onHandleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\" >Email</label>\r\n                    <input type=\"email\" name=\"email\"  value={ data.email } onChange={ onHandleChange } /> \r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\" >Password</label>\r\n                    <input type=\"password\" name=\"password\" value={ data.password } onChange={ onHandleChange } /> \r\n                </div>\r\n\r\n                <input type=\"submit\"/>\r\n\r\n            </form>\r\n            <button onClick={() => setVisible(!visible)}>¿No tienes cuenta? ¡Registrate Aquí!</button>\r\n            <p>Tienes que iniciar sesión para poder acceder a la aplicación</p>\r\n         </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginPage\r\n","import React,{ useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport LoginPage from './components/LoginPage';\n\n\nfunction App() {\n\n    const [ login, setLogin ] = useState(false)\n\n    const [ authorize, setAuthorize ] = useState(false)\n    \n    const [ authorization, setAuthorization ] = useState({\n        username: \"\",\n        token: \"\",\n        balance: 0\n        })\n\n    const [ message, setMessage ] = useState({\n        show: false,\n        message: \"\"\n    })\n\n    useEffect(() => {\n        if(login === true){\n            setAuthorize(true)\n            console.log(\"autorizado para entrar a la app\")\n        } else {\n            return\n        }\n    }, [login, authorize]);\n\n    useEffect(() => {\n        \n        if(message.show !== false){\n            setTimeout(() => {\n                setMessage({\n                    show: false,\n                    message: \"\"\n                })\n            }, 5000)\n        }\n\n    }, [message])\n\n    return ( \n    <>\n        { message.show !== false && message.message }\n        { login === true && authorize === true\n        ? <Home setMessage={ setMessage } setAuthorization={ setAuthorization } authorization={ authorization } /> \n        : <LoginPage setLogin={ setLogin } setMessage={ setMessage } setAuthorization={ setAuthorization } />\n        }\n    </>\n        );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}